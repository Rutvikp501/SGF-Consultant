<main>
  <%- include('../partials/managementSidebar') %>
  <div id="main-wrapper">
    <p class="title">Create Proforma</p>
    <form id="proformaForm">
      <h3 style="color: aliceblue;">Lead Information</h3>
      
      <label for="leadId" style="color: aliceblue;">lead Id:</label>
      <input type="text" id="leadId" name="lead_Id" placeholder="Enter lead Id " />
      <br />

      <label for="bookingName" style="color: aliceblue;">Booking Name:</label>
      <input type="text" id="bookingName" name="booking_name" placeholder="Enter Booking Name" />
      <br />

      <label for="specialsName" style="color: aliceblue;">Specials Name:</label>
      <input type="text" id="specialsName" name="specials_name" placeholder="Enter Specials Name" />
      <br />

      <label for="eventName" style="color: aliceblue;">Event Name:</label>
      <input type="text" id="eventName" name="event_name" placeholder="Enter Event Name" />
      <br />

      <label for="emailId" style="color: aliceblue;">Email ID:</label>
      <input type="email" id="emailId" name="email_id" placeholder="Enter Email ID" />
      <br />

      <label for="mobileNo" style="color: aliceblue;">Mobile No:</label>
      <input type="text" id="mobileNo" name="mobile_no" placeholder="Enter Mobile No" />
      <br />

      <label for="quotationNo" style="color: aliceblue;">Quotation No:</label>
      <input type="text" id="quotationNo" name="quotation_no" placeholder="Enter Quotation No" />
      <br />

      <label for="quotationDate" style="color: aliceblue;">Quotation Date:</label>
      <input type="date" id="quotationDate" name="quotation_date" />
      <br />

      <label for="eventDate" style="color: aliceblue;">Event Date:</label>
      <input type="date" id="eventDate" name="event_date" />
      <br />

      <label for="eventTime" style="color: aliceblue;">Event Time:</label>
      <input type="time" id="eventTime" name="event_time" />
      <br />

      <label for="eventLocation" style="color: aliceblue;">Event Location:</label>
      <textarea id="eventLocation" name="event_location" placeholder="Enter Event Location"></textarea>
      <br />

      <label for="homeAddress" style="color: aliceblue;">Home Address:</label>
      <textarea id="homeAddress" name="home_address" placeholder="Enter Home Address"></textarea>
      <br />

      <label for="serviceType" style="color: aliceblue;">Service Type:</label>
      <select id="serviceType" name="service_type" style="color: black;">
        <option value="">-- Select a Service --</option>
        <option value="film_service">Films Service</option>
        <option value="album_service">Album / PhotoFrame</option>
        <option value="videography_service">Venue Service</option>
      </select>
      <br />

      <label for="format" style="color: aliceblue;">Format:</label>
      <select id="format" name="format" style="color: black;">
        <option value="">-- Select a Format --</option>
        <option value="10-40-50">10-40-50</option>
        <option value="20-30-40">20-30-40</option>
        <option value="50-50">50-50</option>
      </select>
      <br />
      <label for="discount" style="color: aliceblue;">Discount (%):</label>
      <input type="number" id="discount" value="0" style="width: 60px;" />
      <br />
      <label for="itemSelect" style="color: aliceblue;">Select Item:</label>
      <select id="itemSelect">
        <option value="">-- Select an Item --</option>
        <% inventorys.forEach((item) => { %>
          <option value="<%= item._id %>" data-name="<%= item.name %>" data-subname="<%= item.subname %>"  data-price="<%= item.retail_price %>">
            <%= item.name %> -<%= item.subname %> - ₹<%= item.retail_price %>
          </option>
        <% }); %>
      </select>
      <button type="button" id="addItem">Add Item</button>

      <table>
        <thead>
          <tr>
            <th>Item Name</th>
            <th>Subname</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="itemTableBody"></tbody>
      </table>

      <div class="summary">
        <p><strong>Subtotal: </strong> ₹<span id="subtotal">0</span></p>
        <label for="gst" style="color: aliceblue;">GST (%):</label>
        <input type="number" id="gst" value="0" style="width: 60px;" />
        <br />
        <p><strong>Final Total: </strong> ₹<span id="finalTotal">0</span></p>
        <button type="submit">Generate PDF</button>
      </div>
    </form>
  </div>
</main>

<script>
  const proformaForm = document.getElementById('proformaForm');
  const addItemButton = document.getElementById('addItem');
  const itemSelect = document.getElementById('itemSelect');
  const itemTableBody = document.getElementById('itemTableBody');
  const discountInput = document.getElementById('discount');
  const gstInput = document.getElementById('gst');
  const subtotalElement = document.getElementById('subtotal');
  const finalTotalElement = document.getElementById('finalTotal');

  addItemButton.addEventListener('click', function() {
    const selectedOption = itemSelect.options[itemSelect.selectedIndex];
    const itemId = selectedOption.value;
    const itemName = selectedOption.getAttribute('data-name');
    const itemsubname = selectedOption.getAttribute('data-subname');
    const itemPrice = parseFloat(selectedOption.getAttribute('data-price'));

    if (itemId === '') return;

    // Check if item already exists in the table
    const existingRow = [...itemTableBody.rows].find(row => row.dataset.id === itemId);
    if (existingRow) {
      const quantityInput = existingRow.querySelector('.quantity');
      quantityInput.value = parseInt(quantityInput.value) + 1;
      updateRowTotal(existingRow);
    } else {
      const row = document.createElement('tr');
      row.dataset.id = itemId;
      row.innerHTML = `
        <td>${itemName}</td>
        <td>${itemsubname}</td>
        <td>${itemPrice.toFixed(2)}</td>
        <td><input type="number" class="quantity" value="1" min="1" style="width: 60px;" /></td>
        <td class="total">₹${itemPrice.toFixed(2)}</td>
        <td><button type="button" class="removeItem">Remove</button></td>
      `;
      itemTableBody.appendChild(row);

      // Add event listener for quantity input
      row.querySelector('.quantity').addEventListener('change', function() {
        updateRowTotal(row);
        calculateTotal();
      });

      // Add event listener for remove button
      row.querySelector('.removeItem').addEventListener('click', function() {
        row.remove();
        calculateTotal();
      });
    }

    calculateTotal();
  });

  function updateRowTotal(row) {
    const price = parseFloat(row.cells[2].textContent.replace('₹', ''));
    const quantity = parseInt(row.querySelector('.quantity').value);
    const totalCell = row.querySelector('.total');

    totalCell.textContent = `₹${(price * quantity).toFixed(2)}`;
  }

  function calculateTotal() {
    let subtotal = 0;
    document.querySelectorAll('#itemTableBody tr').forEach(row => {
      subtotal += parseFloat(row.querySelector('.total').textContent.replace('₹', ''));
    });

    const discount = parseFloat(discountInput.value) || 0;
    const gst = parseFloat(gstInput.value) || 0;

    const discountAmount = (subtotal * discount) / 100;
    const gstAmount = (subtotal * gst) / 100;
    const finalTotal = subtotal - discountAmount + gstAmount;

    subtotalElement.textContent = subtotal.toFixed(2);
    finalTotalElement.textContent = finalTotal.toFixed(2);
  }

  proformaForm.addEventListener("submit",  async function (e) {
    e.preventDefault();

    const formData = new FormData(proformaForm);
    const formObject = Object.fromEntries(formData.entries());

    const items = [];
    document.querySelectorAll("#itemTableBody tr").forEach((row) => {
      const name = row.cells[0].textContent;
      const subname = row.cells[1].textContent;
      const price = parseFloat(row.cells[2].textContent.replace('₹', ''));
      const quantity = parseInt(row.querySelector(".quantity").value);
      items.push({ name,subname ,price, quantity });
    });

    // formObject.qdata = {
    //   type: document.getElementById('serviceType').value,
    //   format: document.getElementById('format').value,
    // };
    formObject.items = items;
    formObject.subtotal = subtotalElement.textContent;
    formObject.discount = parseFloat(discountInput.value);
    formObject.gst = parseFloat(gstInput.value);
    formObject.finalTotal = parseFloat(finalTotalElement.textContent);

    fetch("/admin/createproforma", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formObject),
    })
      .then((response) =>  async function(e) {
        if (response.ok) {
          const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'Proforma_with_Terms.pdf';
        document.body.appendChild(a);
        a.click();
        a.remove(); // Clean up
        } else {
          alert("Failed to generate PDF.");
        }
      })
      .catch((error) => console.error("Error:", error));
  });
</script>
